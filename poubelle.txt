            cartes.append({"carte":deepcopy(carte_electorale), "resultats": resultats |  {"abstention":COTE**2 - sum([resultats[clé] for clé in resultats])}})
            if partis == []:
                return {
                    "nombre de cartes": n,
                    "cartes": cartes,
                        }
            taille, taches = len(carte_electorale)-1, []
            for x, y, logo in partis:            
                for x1, y1 in ([(1+x, 0+y), (0+x, 1+y), (-1+x, 0+y), (0+x, -1+y)] if n % 2 == 0 else 
                               [(1+x, 0+y), (0+x, 1+y), (-1+x, 0+y), (0+x, -1+y), (1+x, 1+y), (-1+x, -1+y), (1+x, -1+y), (-1+x, 1+y)]):
                    if 0 <= x1 <= taille and 0 <= y1 <= taille and carte_electorale[y1][x1] == "." and n <= COTE * portées_max[logo]: 
                        carte_electorale[y1][x1] = logo
                        resultats[logo] += 1
                        taches.append((x1, y1, logo))
            return election_directe_1_tour(n+1, taches, resultats, carte_electorale, portées_max, cartes)